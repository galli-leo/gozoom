// Code generated by "enumer -type=ExtractType -trimprefix=Extract"; DO NOT EDIT.

//
package cmd

import (
	"fmt"
)

const _ExtractTypeName = "VideoAudio"

var _ExtractTypeIndex = [...]uint8{0, 5, 10}

func (i ExtractType) String() string {
	if i < 0 || i >= ExtractType(len(_ExtractTypeIndex)-1) {
		return fmt.Sprintf("ExtractType(%d)", i)
	}
	return _ExtractTypeName[_ExtractTypeIndex[i]:_ExtractTypeIndex[i+1]]
}

var _ExtractTypeValues = []ExtractType{0, 1}

var _ExtractTypeNameToValueMap = map[string]ExtractType{
	_ExtractTypeName[0:5]:  0,
	_ExtractTypeName[5:10]: 1,
}

// ExtractTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ExtractTypeString(s string) (ExtractType, error) {
	if val, ok := _ExtractTypeNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ExtractType values", s)
}

// ExtractTypeValues returns all values of the enum
func ExtractTypeValues() []ExtractType {
	return _ExtractTypeValues
}

// IsAExtractType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ExtractType) IsAExtractType() bool {
	for _, v := range _ExtractTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
